version: '3.8'

services:
  workflows-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=workflows-service
    command: npm run start:dev -- workflows-service
    # ports:
    #   - 3001:3001 # Map port with service is listening to docker container port
    environment:
      - MYSQL_HOST=workflows-db
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=partner_data
      - MYSQL_DATABASE=workflows
      - NATS_URL=nats://nats:4222
      - RABBITMQ_URL=amqp://rabbitmq:5672
    deploy:
      replicas: 3 # This instructs Docker Compose to start 3 instances of the "workflows-service" container
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/workflows-service:/usr/src/app/apps/workflows-service
    depends_on:
      - workflows-db
      - rabbitmq
      - nats

  workflows-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=partner_data
      - MYSQL_DATABASE=workflows
      - MYSQL_USER=root
      - MYSQL_PASSWORD=partner_data

  virtual-facility:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=virtual-facility
    command: npm run start:dev -- virtual-facility
    ports:
      - 3000:3000 # Map port with service is listening to docker container port
    environment:
      - MYSQL_HOST=virtual-facility-db
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=partner_data
      - MYSQL_DATABASE=virtual-facility
      - NATS_URL=nats://nats:4222
      - RABBITMQ_URL=amqp://rabbitmq:5672

    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./node_modules:/usr/src/app/node_modules
      - ./apps/virtual-facility:/usr/src/app/apps/virtual-facility
    depends_on:
      - virtual-facility-db
      - workflows-service
      - rabbitmq
      - nats

  virtual-facility-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=partner_data
      - MYSQL_DATABASE=virtual-facility
      - MYSQL_PASSWORD=partner_data
      - MYSQL_USER=root
  nats:
    image: nats:2.2.2-alpine
  alarms-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-service
    command: npm run start:dev -- alarms-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/alarms-service:/usr/src/app/apps/alarms-service
    depends_on:
      - nats
  alarms-generator:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-generator
    command: npm run start:dev -- alarms-generator
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/alarms-generator:/usr/src/app/apps/alarms-generator
    depends_on:
      - nats
  alarms-classifier-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-classifier-service
    command: npm run start:dev -- alarms-classifier-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/alarms-classifier-service:/usr/src/app/apps/alarms-classifier-service
    depends_on:
      - nats
  notification-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=notification-service
    command: npm run start:dev -- notification-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container       # We are doing this for the sake of simplicity in this example       - ./node_modules:/usr/src/app/node_modules
      - ./apps/notification-service:/usr/src/app/apps/notification-service
    depends_on:
      - nats

  rabbitmq:
    image: rabbitmq:3-management
